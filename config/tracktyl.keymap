#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define DEFAULT 0
#define L_ARWS 1
#define L_NUMS 2
#define L_RAISE 3
#define L_MOUSE 4
#define L_SCROLL 5

/ {
    macros {
        ZMK_MACRO(neq,
            wait-ms = <0>;
			tap-ms = <20>;
            bindings = <&macro_tap &kp EXCL &kp EQUAL>;
        )
        ZMK_MACRO(arrow,
            wait-ms = <0>;
			tap-ms = <20>;
            bindings = <&macro_tap &kp MINUS &kp GT>;
        )
        ZMK_MACRO(shftab,
            wait-ms = <0>;
			tap-ms = <20>;
            bindings = <&macro_press &kp LSHFT>, <&macro_tap &kp TAB>, <&macro_release &kp LSHFT>;
        )
    };

    keymap {
        compatible = "zmk,keymap";

    /*
     * Base Layer: DEFAULT
     *
     * ,----------------------------------.                ,----------------------------------.
     * |   Q  |   W  |   E  |   R  |   T  |                |   Y  |   U  |   I  |   O  |   P  |
     * |------+------+------+------+------|                |------+------+------+------+------|
     * |   A  |   S  |  D   |   F  |   G  |                |   H  |   J  |   K  |   L  | ;  : |
     * |------+------+------+------+------|                |------+------+------+------+------|
     * |   Z  |   X  |   C  |   V  |   B  |                |   N  |   M  | ,  < | . >  | /  ? |
     * `-------------+------+------+------+------,  ,------+------+------+------+-------------'
     *        | gui  | alt  | ctrl | tab  | space|  | bspc | enter| esc  | del  |  "   |
     *        |      |      |      | shift|      |  |      | NUMS | ARWS |      |      |
     *        `----------------------------------'  '--------------------'------'------'
     */
        default_layer {
            bindings = <
                &kp Q    &kp W    &kp E    &kp R          &kp T               &kp Y    &kp U          &kp I          &kp O   &kp P
                &kp A    &kp S    &kp D    &kp F          &kp G               &kp H    &kp J          &kp K          &kp L   &kp SEMI
                &kp Z    &kp X    &kp C    &kp V          &kp B               &kp N    &kp M          &kp COMMA      &kp DOT &kp FSLH
                &kp LGUI &kp LALT &kp LCTL &mt LSHIFT TAB &kp SPACE           &kp BSPC &lt L_ARWS RET &lt L_NUMS ESC &kp DEL &kp SQT
            >;
        };

    /*
     * Arrows
     *
     * ,----------------------------------.                ,----------------------------------.
     * |  `   |  =   |  +   |  ~   |  ->  |                | mleft| home |  end |mright|      |
     * |------+------+------+------+------|                |------+------+------+------+------|
     * |  |   |  _   |  -   |  \   |  !=  |                | left | down |  up  | right|      |
     * |------+------+------+------+------+                +------+------+------+------+------|
     * |  <   |  >   |  [   |  ]   |  {   |                |   }  | pgdn | pgup |SCROLL|      |
     * `-------------+------+------+------+------,  ,------+------+------+------+-------------'
     *        |      |      |      |      |      |  |      |      |      |      |      |
     *        `----------------------------------'  '--------------------'------'------'
     */
        lower_layer {
            bindings = <
                &kp GRAVE &kp EQUAL    &kp PLUS  &kp TILDE &arrow              &trans   &kp HOME  &kp END   &trans    &trans
                &kp PIPE  &kp UNDER    &kp MINUS &kp BSLH  &neq                &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &trans
                &kp LT    &kp GT       &kp LBKT  &kp RBKT  &kp LBRC            &kp RBRC &kp PG_DN &kp PG_UP &trans    &trans
                &trans    &trans       &trans    &trans    &trans              &trans   &trans    &trans    &trans    &trans
            >;
        };

    /*
     * Numbers: numbers, specials
     * keep ,. for easy typing of numbers and IPs, keep backspace for obvious reasons
     * ,----------------------------------.                ,----------------------------------.
     * |   !  |   @  |   #  |   $  |   %  |                |   ^  |   &  |   *  |   (  |   )  |
     * |------+------+------+------+------|                |------+------+------+------+------|
     * |   1  |   2  |   3  |   4  |   5  |                |   6  |   7  |   8  |   9  |   0  |
     * |------+------+------+------+------+                +------+------+------+------+------|
     * |   /  |   -  |   =  |   +  |      |                |RAISE |   .  |      |      |      |
     * `-------------+------+------+------+------,  ,------+------+------+------+-------------'
     *        |      |      |      |      |      |  |      |      |      |      |      |
     *        `----------------------------------'  '--------------------'------'------'
     */
        raise_layer {
            bindings = <
                &kp EXCL     &kp AT       &kp HASH     &kp DLLR    &kp PRCNT         &kp CARET   &kp AMPS   &kp STAR  &kp LPAR  &kp RPAR
                &kp N1       &kp N2       &kp N3       &kp N4      &kp N5            &kp N6      &kp N7     &kp N8    &kp N9    &kp N0
                &kp KP_SLASH &kp KP_MINUS &kp EQUAL    &kp KP_PLUS &trans            &mo L_RAISE &kp KP_DOT &trans    &trans    &trans
                &trans       &trans       &trans       &shftab     &trans            &trans      &trans     &trans    &trans    &trans
            >;
        };

    /*
     * ,----------------------------------.                ,----------------------------------.
     * |  F1  |  F2  |  F3  |  F4  |      |                |      | BT P0|OUT BT|OUTUSB|      |
     * |------+------+------+------+------|                |------+------+------+------+------|
     * |  F5  |  F6  |  F7  |  F8  |      |                |      | BT P1|BT CLR|      |      |
     * |------+------+------+------+------|                |------+------+------+------+------|
     * |  F9  |  F10 |  F11 |  F12 |      |                |      | BT P2|RESET | BLDR |      |
     * `-------------+------+------+------+------,  ,------+------+------+------+-------------'
     *        |      |      |      |      |      |  |      |      |      |      |      |
     *        `----------------------------------'  '--------------------'------'------'
     */
        adjust_layer {
            bindings = <
                &kp F1 &kp F2  &kp F3  &kp F4  &trans         &trans &trans &bt BT_SEL 0 &out OUT_BLE &out OUT_USB
                &kp F5 &kp F6  &kp F7  &kp F8  &trans         &trans &trans &bt BT_SEL 1 &bt BT_CLR   &trans
                &kp F9 &kp F10 &kp F11 &kp F12 &reset         &trans &trans &bt BT_SEL 2 &reset       &bootloader
                &trans &trans  &trans  &trans  &bootloader    &trans &trans &trans       &trans       &trans
            >;
        };

    /*
     * ,----------------------------------.                ,----------------------------------.
     * |      |      |      |      |      |                |      |mleft |mright|scroll|      |
     * |------+------+------+------+------|                |------+------+------+------+------|
     * |      |      |      |      |      |                |      |      |      |      |      |
     * |------+------+------+------+------|                |------+------+------+------+------|
     * |      |      |      |      |      |                |      |      |      |      |      |
     * `-------------+------+------+------+------,  ,------+------+------+------+-------------'
     *        |      |      |      |      |      |  |      |      |      |      |      |
     *        `----------------------------------'  '--------------------'------'------'
     */
        mouse_layer {
            bindings = <
                &trans &trans &trans &trans &trans         &trans &mkp LCLK &mkp RCLK &mo L_SCROLL &trans
                &trans &trans &trans &trans &trans         &trans &trans    &trans    &trans       &trans
                &trans &trans &trans &trans &trans         &trans &trans    &trans    &trans       &trans
                &trans &trans &trans &trans &trans         &trans &trans    &trans    &trans       &trans
            >;
        };

        scroll_layer {
            bindings = <
                &trans &trans &trans &trans &trans         &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans         &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans         &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans         &trans &trans &trans &trans &trans
            >;
        };
    };
};
