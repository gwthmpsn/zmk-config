#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define SYM   	1
#define NAV   	2
#define FXN	3
#define QWT	4
#define LGE	5
// Would love to have a greek layer :(

/ {
	macros {
		deg: deg {
			label = "deg";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings
				= <&macro_release &kp LSHFT>
				, <&macro_press   &kp LALT>
				, <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N6>
				, <&macro_release &kp LALT>
				;
		};
		cut: cut {
			label = "cut";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings
				= <&macro_press   &kp LCTRL>
				, <&macro_tap     &kp X>
				, <&macro_release &kp LCTRL>
				;
		};
		cpy: cpy {
			label = "cpy";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings
				= <&macro_press   &kp LCTRL>
				, <&macro_tap     &kp C>
				, <&macro_release &kp LCTRL>
				;
		};
		pst: pst {
			label = "pst";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings
				= <&macro_press   &kp LCTRL>
				, <&macro_tap     &kp V>
				, <&macro_release &kp LCTRL>
				;
		};
		udo: udo {
			label = "udo";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings
				= <&macro_press   &kp LCTRL>
				, <&macro_tap     &kp Z>
				, <&macro_release &kp LCTRL>
				;
		};
			rdo: rdo {
			label = "rdo";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings
				= <&macro_press   &kp LCTRL>
				, <&macro_tap     &kp Y>
				, <&macro_release &kp LCTRL>
				;
		};
		th: th {
			label = "th";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings
				= <&macro_tap     &kp T &kp H>
				;
		};
		Th: Th {
			label = "Th";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings
				= <&macro_tap     &kp RS(T) &kp H>
				;
		};
		combos {
		compatible = "zmk,combos";
			combo_th {
				timeout-ms = <30>;
				key-positions = <12 13>;
				bindings = <&th>;
				layers = <0>
				};
			};
			combo_Th {
				timeout-ms = <30>;
				key-positions = <12 13 16>;
				bindings = <&Th>;
				layers = <0>
				};
			};
	};
	behaviors {
		mo_tog: behavior_mo_tog {
			compatible = "zmk,behavior-hold-tap";
			label = "mo_tog";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			bindings = <&mo>, <&tog>;
		};
		R1C4: R1C4 {								// . ,
			compatible = "zmk,behavior-mod-morph";
			label = "R1C4";
			#binding-cells = <0>;
			bindings = <&kp PERIOD>, <&kp COMMA>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};	
		R0C7: R0C7 {								// 8 deg
			compatible = "zmk,behavior-mod-morph";
			label = "R0C7";
			#binding-cells = <0>;
			bindings = <&kp KP_N8>, <&deg>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};	
		R0C8: R0C8 {								// 9 =
			compatible = "zmk,behavior-mod-morph";
			label = "R0C8";
			#binding-cells = <0>;
			bindings = <&kp KP_N9>, <&kp EQUAL>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};	
			R0C9: R0C9 {							// 0 ?
			compatible = "zmk,behavior-mod-morph";
			label = "R0C9";
			#binding-cells = <0>;
			bindings = <&kp KP_N0>, <&kp QMARK>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};
		spc_entr: spc_entr {							// SPACE ENTER
			compatible = "zmk,behavior-mod-morph";
			label = "spc_entr";
			#binding-cells = <0>;
			bindings = <&kp SPACE>, <&kp ENTER>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};
		bspc_del: bspc_del {							// BSPC DEL
			compatible = "zmk,behavior-mod-morph";
			label = "bspc_del";
			#binding-cells = <0>;
			bindings = <&kp BSPC>, <&kp DEL>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};
		R3C1: R3C1 {								// I want this to be bspc, del, or layer
			compatible = "zmk,behavior-hold-tap";
		    	label = "R3C1";
		    	#binding-cells = <2>;
		    	bindings = <&mo>, <&spc_entr>;
		    	tapping-term-ms = <200>;
		};
		R3C5: R3C5 {								// I want this to be bspc, del, or layer
			compatible = "zmk,behavior-hold-tap";
		    	label = "R3C5";
		    	#binding-cells = <2>;
		    	bindings = <&mo>, <&bspc_del>;
		    	tapping-term-ms = <200>;
		};
		hm: balanced_homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping-term-ms = <200>;    // <---[[moderate duration]]
			quick-tap-ms = <50>;
			flavor = "balanced";
			bindings = <&kp>, <&kp>;
		};
	    };

	keymap {
		compatible = "zmk,keymap";

        default_layer {
// -------------------------------------------------------------------------------------------------------------------------
// |    Q    |    C    |    W    |    P    |    V    |                   |    H    |    Y    |    O    |    K    |    Z    |
// |    R    |    S    |    N    |    T    |    .    |                   |    '    |    U    |    E    |    A    |    I    |
// |    X    |    M    |    L    |    D    |    ;    |                   |    -    |    F    |    J    |    G    |    B    |
//           |         |         |                                                           |         |         |
//                               |   ESC   |  SPACE  |                   |    x    |  ENTER  |
//                                         |         |  LSHFT  |    x    |  BSPC   |
//                                         |         |         |         |  layer  |
            bindings = <
&kp Q		&kp C		&kp W		&kp P		&kp V			&kp H		&kp Y		&kp O		&kp K		&kp Z
&hm LGUI R	&hm LALT S	&hm LCTRL N	&hm LSHFT T	&R1C4			&kp APOS	&hm RSHFT U	&hm RCTRL E	&hm RALT A	&hm RGUI I
&kp X		&kp M		&kp L		&kp D		&kp SEMI		&kp MINUS	&kp F		&kp J		&kp G		&kp B
		&none		&none                                                                  			&none		&none
                               	&lt FXN ESC	&spc_entr						&none		&mo_tog 1 1
                                           	&none		&lt NAV TAB		&none		&bspc_del
						&to(5)		&to(4)			&lt NAV ENTER	&to(0)     
            >;
        };

	// Symbolic layer
        sym {
			bindings = <
&kp EXCL	&kp AT		&kp HASH	&kp DLLR	&kp PRCNT		&kp CARET	&kp AMPS	&deg     	&kp EQUAL     	&kp QMARK
&hm LGUI LBRC 	&hm LALT LBKT	&hm LCTRL LPAR	&hm LSHFT BSLH	&trans			&trans		&hm RSHFT FSLH	&hm RCTRL RPAR	&hm RALT RBKT	&hm RGUI RBRC
&kp GRAVE 	&kp LT		&kp ASTRK	&kp PLUS	&trans			&trans 		&kp MINUS	&kp FSLH	&kp GT		&kp PIPE
		&trans		&trans											&trans  	&trans
				&trans    	&trans							&trans		&trans
						&trans		&trans			&trans		&trans
						&trans		&trans			&to(0)		&to(0)
            >;
        };

	// Navigation layer
        nav {
            bindings = <
&bt BT_CLR	&kp K_APP	&kp C_BRI_UP	&kp C_VOL_UP	&kp C_PREV              &kp PG_UP	&kp HOME	&kp PSCRN 	&kp PAUSE_BREAK	&bt BT_CLR
&kp LGUI	&kp LALT	&kp LCTRL	&kp LSHFT	&kp C_PP                &kp INS		&kp LEFT	&kp DOWN  	&kp UP		&kp RIGHT  
&udo		&rdo		&kp C_BRI_DN	&kp C_VOL_DN	&kp C_NEXT              &kp PG_DN	&kp END		&cut		&cpy		&pst
		&trans		&trans											&trans		&trans
				&trans		&trans							&trans		&trans
						&trans		&trans			&trans		&trans
						&trans		&trans			&to(0)		&trans
            >;
        };
		
	// Funco-numeric key layer
		fxn {
            bindings = <
    &kp F1	&kp F2		&kp F3    	&kp F4		&kp F5        		&kp F6    	&kp F7		&kp F8    	&kp F9		&kp F10 
    &kp KP_N1	&kp KP_N2	&kp KP_N3  	&kp KP_N4	&kp KP_N5		&kp KP_N6	&kp KP_N7     	&kp KP_N8 	&kp KP_N9	&kp KP_N0  
    &none     	&none  		&none 	  	&none 		&kp F11         	&kp F12 	&none		&none		&none		&none    
              	&trans    	&trans                                                                			&trans		&trans
                                &trans		&trans                        				&trans    	&trans
                                            	&trans 	 	&trans   		&trans    	&trans
                                            	&trans   	&trans     		&to(0)    	&trans
            >;
        };
		
	// QWERTY layer for plebs
		qwt {
            bindings = <
    &kp Q     &kp W    &kp E     &kp R     &kp T                      	  &kp Y     &kp U     &kp I     &kp O     &kp P
	&kp A     &kp S    &kp D     &kp F     &kp G                       	  &kp H     &kp I     &kp J     &kp K     &kp L
    &kp Z     &kp X    &kp C     &kp V     &kp B                       	  &kp N     &kp M     &kp COMMA &kp PERIOD &kp FSLH
              &trans    &trans                                                                &trans    &trans
                                  &trans    &trans                        &trans    &trans
                                            &trans 	 &trans   	&trans    &trans
                                            &trans   &trans     &to(0)    &trans
            >;
        };
		
	// League of Legends layer
		lge {
            bindings = <
    &none     &kp N1   &kp N2    &kp N3    &kp N4                      	  &none		&none	  &none	    &none	  &none
	&kp LSHFT &kp Q    &kp W     &kp E     &kp R                      	  &none		&none	  &none	    &none	  &none
    &kp LCTRL &none    &none     &kp D     &kp F                      	  &none		&none	  &none	    &none	  &none
              &trans   &trans                                                                 &trans    &trans
                                  &kp LALT  &trans                        &trans    &trans
                                            &trans 	 &trans   	&trans    &trans
                                            &to(0)   &trans     &to(0)    &trans
            >;
        };
    };
};

/*
	// trans layer
		trans {
            bindings = <
&trans		&trans		&trans		&trans		&trans			&none		&none		&none		&none		&none
&trans		&trans		&trans		&trans		&trans			&none		&none		&none		&none		&none
&trans 		&trans		&trans		&trans		&trans			&none		&none		&none		&none		&none
		&trans		&trans											&trans		&trans
				&trans		&trans							&trans		&trans
                                            	&trans 	 	&trans			&trans		&trans
                                            	&to(0)   	&trans			&to(0)		&trans
            >;
        };
*/
