#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define RAISE   1
#define LOWER   2

/ {
    behaviors {
    mo_tog: behavior_mo_tog {
        compatible = "zmk,behavior-hold-tap";
        label = "mo_tog";
        #binding-cells = <2>;
        flavor = "hold-preferred";
        tapping-term-ms = <200>;
        bindings = <&mo>, <&tog>;
        };
    R0C1: R0C1 { 								// #$
        compatible = "zmk,behavior-mod-morph";
        label = "R0C1";
        #binding-cells = <0>;
        bindings = <&kp HASH>, <&kp DOLLAR>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    R0C2: R0C2 { 								// { /
        compatible = "zmk,behavior-mod-morph";
        label = "R0C2";
        #binding-cells = <0>;
        bindings = <&kp LBRC>, <&kp FSLH>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    R0C3: R0C3 { 								// } \
        compatible = "zmk,behavior-mod-morph";
        label = "R0C3";
        #binding-cells = <0>;
        bindings = <&kp RBRC>, <&kp BSLH>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    R0C4: R0C4 {								// < >
        compatible = "zmk,behavior-mod-morph";
        label = "R0C4";
        #binding-cells = <0>;
        bindings = <&kp LT>, <&kp GT>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    R1C0: R1C0 {								// & @
        compatible = "zmk,behavior-mod-morph";
        label = "R1C0";
        #binding-cells = <0>;
        bindings = <&kp AMPS>, <&kp AT>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    R1C1: R1C1 {								// ! ?
        compatible = "zmk,behavior-mod-morph";
        label = "R1C1";
        #binding-cells = <0>;
        bindings = <&kp EXCL>, <&kp QMARK>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    R1C2: R1C2 {								// ( -
        compatible = "zmk,behavior-mod-morph";
        label = "R1C2";
        #binding-cells = <0>;
        bindings = <&kp LPAR>, <&kp MINUS>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    R1C3: R1C3 {								// ) +
        compatible = "zmk,behavior-mod-morph";
        label = "R1C3";
        #binding-cells = <0>;
        bindings = <&kp RPAR>, <&kp PLUS>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    R1C4: R1C4 { 								// .,
        compatible = "zmk,behavior-mod-morph";
        label = "R1C4";
        #binding-cells = <0>;
        bindings = <&kp PERIOD>, <&kp COMMA>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    R2C0: R2C0 {								// _ |
        compatible = "zmk,behavior-mod-morph";
        label = "R2C0";
        #binding-cells = <0>;
        bindings = <&kp UNDER>, <&kp PIPE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    R2C1: R2C1 {								// % ^
        compatible = "zmk,behavior-mod-morph";
        label = "R2C1";
        #binding-cells = <0>;
        bindings = <&kp PRCNT>, <&kp CARET>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
// -------------------------------------------------------------------------------------------------------------------------
// |    B    |    Y    |    O    |    U    |    '    |                   |    L    |    D    |    W    |    G    |    Q    |
// |    C    |    I    |    E    |    A    |    .,   |                   |    H    |    T    |    S    |    N    |    J    |
// |    Z    |    X    |    V    |    K    |    ;    |                   |    R    |    M    |    F    |    P    |   {2}   |
//           |   TAB   |    ESC  |                                                           |   WIN   |   CTX   |
//                               |   LSHFT |  SPACE  |                   |SPC + ALT|ENTR+SHFT|
//                                         |  LCTRL  |   LALT  |  BSPC   |   DEL   |
//                                         |  Raise  |   ENTER |   GUI   |  Lower  |
            bindings = <
    &kp B     &kp Y    &kp O     &kp U     &kp APOS                       &kp L     &kp D     &kp W     &kp G     &kp Q
    &kp C     &kp I    &kp E     &kp A     &R1C4                       	  &kp H     &kp T     &kp S     &kp N     &kp J
    &kp Z     &kp X    &kp V     &kp K     &kp SEMI                       &kp R     &kp M     &kp F 	&kp P  	  &mo_tog 2 2
              &kp TAB  &kp ESC                                                                &kp LWIN  &kp K_CONTEXT_MENU
                                 &kp LSHFT &kp SPACE                   	  &kp RSHFT &none
                                           &kp LCTRL &kp LALT  &none      &kp TILDE
                                           &kp TILDE &kp ENTER &kp BSPC   &kp DEL
            >;
        };

        raise {
// ZMK doesn't support mouse behaviors, so unlike QMK, this default keymap
// exchanges that behavior for Bluetooth behavior
// -------------------------------------------------------------------------------------------------------------------------
// |         |         |         |         |         |                   |  Vol +  |         |    up   |         |   PgUp  |
// |   BT1   |   BT2   |   BT3   |   BT4   |   BT5   |                   |  Mute   |   left  |   down  |  right  |   PgDn  |
// |         |         |  BTCLR  |  BTNXT  |  BTPRV  |                   |  Vol -  |    /    |    \    |    ?    |    |    |
//           |         |         |                                                           |    -    |    +    |
//                               |         |         |                   |         |         |
//                                         |         |         |         |         |
//                                         |         |         |         |         |
            bindings = <
    &trans    &trans    &trans    &trans    &trans                        &kp C_VOL_UP &trans &kp UP    &trans    &kp PG_UP
    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &kp C_MUTE &kp LEFT &kp DOWN  &kp RIGHT &kp PG_DN
    &trans    &trans    &bt BT_CLR &bt BT_NXT &bt BT_PRV                  &kp C_VOL_DN &kp KP_SLASH &kp BSLH &kp QMARK &kp PIPE
              &trans    &trans                                                                &kp MINUS &kp PLUS
                                  &trans    &trans                        &trans     &trans
                                            &trans    &trans    &trans    &trans
                                            &trans    &trans    &trans    &trans
            >;
        };

        lower {
// -------------------------------------------------------------------------------------------------------------------------
// |   F1    |   F2    |   F3    |   F4    |   F5    |                   |   F6    |   F7    |   F8    |   F9    |   F10   |
// |    1    |    2    |    3    |    4    |    5    |                   |    6    |    7    |    8    |    9    |    0    |
// |    !    |    @    |    #    |    $    |    %    |                   |    ^    |    &    |    *    |    (    |    )    |
//           |         |   F11   |   F12                                                     |    -    |    =    |
//                               |         |         |                   |         |         |
//                                         |         |         |         |         |
//                                         |         |         |         |         |
            bindings = <
    &kp F1    &kp F2   &kp F3    &kp F4    &kp F5                         &kp F6    &kp F7    &kp F8    &kp F9    &kp F10
    &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_N4 &kp KP_N5                     &kp KP_N6 &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_N0
    &kp EXCL  &kp AT   &kp HASH  &kp DLLR  &kp PRCNT                      &kp CARET &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR
              &kp F11  &kp F12                                                                &kp MINUS &kp EQUAL
                                 &trans    &trans                        &trans     &trans
                                           &trans    &trans    &trans    &trans
                                           &trans    &trans    &trans    &trans
            >;
        };

        // This layer is for easier copy/paste when creating new keymaps, so you have transparent keys already added
        trans {
// -------------------------------------------------------------------------------------------------------------------------
// |         |         |         |         |         |                   |         |         |         |         |         |
// |         |         |         |         |         |                   |         |         |         |         |         |
// |         |         |         |         |         |                   |         |         |         |         |         |
//           |         |         |                                                           |         |         |
//                               |         |         |                   |         |         |
//                                         |         |         |         |         |
//                                         |         |         |         |         |
// I added a zero key because Zephyr won't compile with a only-transparent layer
            bindings = <
    &kp KP_N0 &trans    &trans    &trans    &trans                        &trans    &trans    &trans    &trans    &trans
    &trans    &trans    &trans    &trans    &trans                        &trans    &trans    &trans    &trans    &trans
    &trans    &trans    &trans    &trans    &trans                        &trans    &trans    &trans    &trans    &trans
              &trans    &trans                                                                &trans    &trans
                                  &trans    &trans                        &trans    &trans
                                            &trans    &trans    &trans    &trans
                                            &trans    &trans    &trans    &trans
            >;
        };
    };
};
